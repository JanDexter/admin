# Docker Development Environment

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: admin_dashboard_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini
    networks:
      - admin_network
    depends_on:
      - database
      - redis
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=database
      - REDIS_HOST=redis

  nginx:
    image: nginx:alpine
    container_name: admin_dashboard_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites/:/etc/nginx/sites-available:ro
      - ./docker/nginx/ssl/:/etc/nginx/ssl:ro
    networks:
      - admin_network
    depends_on:
      - app

  database:
    image: mysql:8.0
    container_name: admin_dashboard_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: admin_dashboard_docker
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "3307:3306"
    networks:
      - admin_network

  redis:
    image: redis:7-alpine
    container_name: admin_dashboard_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - admin_network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: admin_dashboard_mail
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - admin_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: admin_dashboard_pma
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_USER: admin_user
      PMA_PASSWORD: admin_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "8081:80"
    networks:
      - admin_network
    depends_on:
      - database

networks:
  admin_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
